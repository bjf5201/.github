name: TypeScript CI

on:
  push:
    branches: [ $default-branch ]
  pull-request:
    branches: [ $default-branch ]

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  TC_TOKEN: ${{ secrets.TC_CLOUD_TOKEN }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  ENVIRONMENT: staging

jobs:
  unit-test:
    name: Compile and Unit testing
    runs-on: ubuntu-latest
    environment: ${{ env.ENVIRONMENT }}
    outputs:
      job_id: ${{ steps.job_step.outputs.job_id }}
    strategy:
      fail-fast: false
    steps:
      - name: Job ID output
        id: job_step
        run: |-
          echo "job_id=$RANDOM" >> $GITHUB_OUTPUT
          echo "Initiating unit test job"

      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: pnpm setup
        uses: pnpm/action@

      - name: Node setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install deps and build
        # for now, keeping all pnpm scripts seperate for logging
        run: |-
          pnpm install
          pnpm run lint
          pnpm run format
          pnpm run type --if-present
          pnpm run test:unit
          pnpm run build --if-present

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifact
          pattern: dist/*/**
          path: $GITHUB_WORKSPACE/dist

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: out/test/code-coverage.html

  integration-test:
    name: Integration Testing
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: pnpm setup
        uses: pnpm/action@

      - name: Node setup
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-artifact

    # Only including this second step for now to ensure that
    # when the code is changed to upload the coverage report
    # to CodeCov the proper parameters are in place to ONLY
    # download the dist-artifact from the 'Download dist artifact'
    # step.
      - name: Download code coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: code-coverage-report

      - name: Display structure of downloaded files
        run: ls -R

      - name: Install deps and build
        run: |-
          pnpm install
          pnpm run test:integration --if-present


